{
    "csharp": {
        "displayName": "C#",
        "fileExt": "cs",
        "description": "A general-purpose high-level programming language supporting multiple paradigms.",
        "templates": {
            "class": {
                "displayName": "Class",
                "description": "A C# top level class.",
                "filename": "Class",
                "body": [
                    "namespace [namespace];",
                    "",
                    "public class $TM_FILENAME_BASE",
                    "{",
                    "\t$0",
                    "}"
                ]
            },
            "enum": {
                "displayName": "Enum",
                "filename": "Enum",
                "description": "A C# top level enum.",
                "body": [
                    "namespace [namespace];",
                    "",
                    "public enum $TM_FILENAME_BASE",
                    "{",
                    "\t$0",
                    "}"
                ]
            },
            "struct": {
                "displayName": "Struct",
                "description": "A C# top level struct.",
                "filename": "Struct",
                "body": [
                    "namespace [namespace];",
                    "",
                    "public struct $TM_FILENAME_BASE",
                    "{",
                    "\t$0",
                    "}"
                ]
            },
            "interface": {
                "displayName": "Interface",
                "description": "A C# top level interface.",
                "filename": "IInterface",
                "body": [
                    "namespace [namespace];",
                    "",
                    "public interface $TM_FILENAME_BASE",
                    "{",
                    "\t$0",
                    "}"
                ]
            },
            "globalUsing": {
                "displayName": "Global Using",
                "description": "A global using file for .Net6+ projects",
                "filename": "GlobalUsings",
                "body": [
                    "// This file was automatically generated by 'TheFish2191.csharp-stuff' vscode extension!",
                    "// You can add more global usings here, comment or uncomment them by pressing Ctrl + /",
                    "// Here are some of the most used global using statements:",
                    "",
                    "// For console apps",
                    "global using static System.Console;",
                    "",
                    "// Do the math, work with collections",
                    "// global using System.Numerics;",
                    "// global using static System.Math;",
                    "// global using static System.Convert;",
                    "// global using System.Collections.Immutable;",
                    "",
                    "// Work with Text, Json and XML",
                    "// global using System.Xml;",
                    "// global using System.Text;",
                    "// global using System.Text.RegularExpressions;",
                    "// global using System.Text.Json;",
                    "// global using System.Text.Json.Serialization;",
                    "",
                    "// debugging and logging",
                    "// global using Xunit;",
                    "// global using System.Diagnostics;",
                    "// global using System.Diagnostics.CodeAnalysis;",
                    "",
                    "// Your current project",
                    "global using [namespace];",
                    "namespace [namespace]; // Delete if you created this namespace already"
                ]
            },
            "unitTest": {
                "displayName": "Unit Test",
                "description": "Do unit testing using Xunit",
                "filename": "Fact",
                "body": [
                    "namespace [namespace];",
                    "",
                    "public class $TM_FILENAME_BASE",
                    "{",
                    "    [Fact]",
                    "    public void Test1()",
                    "    {",
                    "        int a = 1;",
                    "        int b = 2;",
                    "        int expected = 3;",
                    "        int actual = a + b;",
                    "        // Testing...",
                    "        Assert.Equal(expected, actual);",
                    "    }",
                    "}"
                ]
            },
            "unityScript": {
                "displayName": "Unity Script",
                "description": "A standard Unity Script",
                "filename": "Script",
                "body": [
                    "using System.Collections;",
                    "using System.Collections.Generic;",
                    "using UnityEngine;",
                    "",
                    "public class $TM_FILENAME_BASE : MonoBehaviour",
                    "{",
                    "    // Start is called before the first frame update",
                    "    void Start()",
                    "    {",
                    "        $0",
                    "    }",
                    "",
                    "    // Update is called once per frame",
                    "    void Update()",
                    "    {",
                    "        ",
                    "    }",
                    "}"
                ]
            },
            "unityScriptableObject": {
                "displayName": "Unity ScriptableObject",
                "description": "A standard unity scriptableObject",
                "filename": "ScriptableObject",
                "body": [
                    "using UnityEngine;",
                    "",
                    "[CreateAssetMenu(fileName = \"$TM_FILENAME_BASE\", menuName = \"ScriptableObjects/$TM_FILENAME_BASE\", order = 1)]",
                    "public class $TM_FILENAME_BASE : ScriptableObject",
                    "{",
                    "    private void OnEnable()",
                    "    {",
                    "        // Do stuff",
                    "    }",
                    "",
                    "    private void OnDisable()",
                    "    {",
                    "        // Do stuff",
                    "    }",
                    "}"
                ]
            }
        }
    },
    "zCsharpLegacy": {
        "displayName": "C# (Legacy)",
        "fileExt": "cs",
        "description": "A general-purpose high-level programming language supporting multiple paradigms.",
        "templates": {
            "class": {
                "displayName": "Class",
                "description": "A Class for legacy .Net",
                "filename": "Class",
                "body": [
                    "using System;",
                    "using System.Collections.Generic;",
                    "using System.Linq;",
                    "using System.Threading.Tasks;",
                    "",
                    "namespace [namespace]",
                    "{",
                    "   public class $TM_FILENAME_BASE",
                    "   {",
                    "       ${1:}",
                    "   }",
                    "}"
                ]
            },
            "enum": {
                "displayName": "Enum",
                "description": "A Enum for legacy .Net",
                "filename": "Enum",
                "body": [
                    "using System;",
                    "using System.Collections.Generic;",
                    "using System.Linq;",
                    "using System.Threading.Tasks;",
                    "",
                    "namespace [namespace]",
                    "{",
                    "   public enum $TM_FILENAME_BASE",
                    "   {",
                    "       ${1:}",
                    "   }",
                    "}"
                ]
            },
            "struct": {
                "displayName": "Struct",
                "description": "A Struct for legacy .Net",
                "filename": "Struct",
                "body": [
                    "using System;",
                    "using System.Collections.Generic;",
                    "using System.Linq;",
                    "using System.Threading.Tasks;",
                    "",
                    "namespace [namespace]",
                    "{",
                    "   public struct $TM_FILENAME_BASE",
                    "   {",
                    "       ${1:}",
                    "   }",
                    "}"
                ]
            },
            "interface": {
                "displayName": "Interface",
                "description": "A Interface for legacy .Net",
                "filename": "IInterface",
                "body": [
                    "using System;",
                    "using System.Collections.Generic;",
                    "using System.Linq;",
                    "using System.Threading.Tasks;",
                    "",
                    "namespace [namespace]",
                    "{",
                    "   public interface $TM_FILENAME_BASE",
                    "   {",
                    "       ${1:}",
                    "   }",
                    "}"
                ]
            }
        }
    },
    "typescript": {
        "displayName": "TypeScript",
        "fileExt": "ts",
        "description": "A high-level programming language developed and maintained by Microsoft",
        "templates": {
            "class": {
                "displayName": "Class",
                "description": "Typescript class with constructor",
                "filename": "Class",
                "body": [
                    "/**",
                    "* Class description",
                    "*/",
                    "export class $TM_FILENAME_BASE {",
                    "    constructor(${1:...args}:${2:string[]}) {",
                    "        $0",
                    "    }",
                    "}"
                ]
            },
            "module": {
                "displayName": "Module",
                "description": "A Typescript module with function",
                "filename": "Module",
                "body": [
                    "export function ${1:moduleName}() {",
                    "\tconsole.log('${0}');",
                    "}"
                ]
            }
        }
    },
    "python": {
        "displayName": "Python",
        "fileExt": "py",
        "description": "A scriptable programming language.",
        "templates": {
            "mainScript": {
                "displayName": "Main Program",
                "description": "A entry point for a complex program",
                "filename": "main",
                "body": [
                    "# $TM_FILENAME",
                    "",
                    "def main():",
                    "    pass",
                    "",
                    "if __name__ == \"__main__\":",
                    "    main()",
                    ""
                ]
            },
            "script": {
                "displayName": "Script",
                "description": "A simple Python Script",
                "filename": "script",
                "body": ["# $TM_FILENAME", "", "print(\"Hello world\")"]
            },
            "requirements": {
                "displayName": "Requirements",
                "description": "A text file with dependencies for python",
                "filename": "Requirements",
                "fileExt": "txt",
                "body": [
                    "arrow",
                    "python-dateutil",
                    "six",
                    "numpy",
                    "scipy",
                    "matplotlib",
                    "pandas",
                    "bokeh",
                    "scikit-learn",
                    "dask"
                ]
            }
        }
    },
    "others": {
        "displayName": "Other files",
        "description": "Language independent files, such as JSON and XML",
        "templates": {
            "XML": {
                "displayName": "XML file",
                "description": "A basic xml file",
                "filename": "XMLFile",
                "fileExt": "xml",
                "body": [
                    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                    "<$TM_FILENAME_BASE>",
                    "    $0",
                    "</$TM_FILENAME_BASE>"
                ]
            },
            "JSON": {
                "displayName": "JSON file",
                "description": "A empty json file",
                "filename": "JsonFile",
                "fileExt": "json",
                "body": ["{", "    $0", "}"]
            }
        }
    }
}
