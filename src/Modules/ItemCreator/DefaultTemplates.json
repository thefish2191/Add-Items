{
    "CSharpClass": {
        "displayName": "C# Class",
        "description": "A .Net 6+ Class",
        "filename": "Class",
        "fileExt": ".cs",
        "body": [
            "namespace [namespace];",
            "",
            "public class $TM_FILENAME_BASE",
            "{",
            "\t$0",
            "}"
        ]
    },
    "CSharpEnum": {
        "displayName": "C# Enum",
        "filename": "Enum",
        "description": "A .Net 6+ Enum",
        "fileExt": ".cs",
        "body": [
            "namespace [namespace];",
            "",
            "public enum $TM_FILENAME_BASE",
            "{",
            "\t$0",
            "}"
        ]
    },
    "CSharpStruct": {
        "displayName": "C# Struct",
        "description": "A .Net 6+ Struct",
        "filename": "Struct",
        "fileExt": ".cs",
        "body": [
            "namespace [namespace];",
            "",
            "public struct $TM_FILENAME_BASE",
            "{",
            "\t$0",
            "}"
        ]
    },
    "CSharpInterface": {
        "displayName": "C# Interface",
        "description": "A .Net 6+ Interface",
        "filename": "IInterface",
        "fileExt": ".cs",
        "body": [
            "namespace [namespace];",
            "",
            "public interface $TM_FILENAME_BASE",
            "{",
            "\t$0",
            "}"
        ]
    },
    "CSharpLegacyClass": {
        "displayName": "C# Legacy Class",
        "description": "A Class for legacy .Net",
        "filename": "Class",
        "fileExt": ".cs",
        "body": [
            "using System;",
            "using System.Collections.Generic;",
            "using System.Linq;",
            "using System.Threading.Tasks;",
            "",
            "namespace [namespace]",
            "{",
            "   public class $TM_FILENAME_BASE",
            "   {",
            "       ${1:}",
            "   }",
            "}"
        ]
    },
    "CSharpLegacyEnum": {
        "displayName": "C# Legacy Enum",
        "description": "A Enum for legacy .Net",
        "filename": "Enum",
        "fileExt": ".cs",
        "body": [
            "using System;",
            "using System.Collections.Generic;",
            "using System.Linq;",
            "using System.Threading.Tasks;",
            "",
            "namespace [namespace]",
            "{",
            "   public enum $TM_FILENAME_BASE",
            "   {",
            "       ${1:}",
            "   }",
            "}"
        ]
    },
    "CSharpLegacyStruct": {
        "displayName": "C# Legacy Struct",
        "description": "A Struct for legacy .Net",
        "filename": "Struct",
        "fileExt": ".cs",
        "body": [
            "using System;",
            "using System.Collections.Generic;",
            "using System.Linq;",
            "using System.Threading.Tasks;",
            "",
            "namespace [namespace]",
            "{",
            "   public struct $TM_FILENAME_BASE",
            "   {",
            "       ${1:}",
            "   }",
            "}"
        ]
    },
    "CSharpLegacyInterface": {
        "displayName": "C# Legacy Interface",
        "description": "A Interface for legacy .Net",
        "filename": "IInterface",
        "fileExt": ".cs",
        "body": [
            "using System;",
            "using System.Collections.Generic;",
            "using System.Linq;",
            "using System.Threading.Tasks;",
            "",
            "namespace [namespace]",
            "{",
            "   public interface $TM_FILENAME_BASE",
            "   {",
            "       ${1:}",
            "   }",
            "}"
        ]
    },

    "CSGlobalUsing": {
        "displayName": "C# Global Using",
        "description": "A global using file for .Net6+ projects",
        "filename": "GlobalUsings",
        "fileExt": ".cs",
        "body": [
            "// This file was automatically generated by 'TheFish2191.csharp-stuff' vscode extension!",
            "// You can add more global usings here, comment or uncomment them by pressing Ctrl + /",
            "// Here are some of the most used global using statements:",
            "",
            "// For console apps",
            "global using static System.Console;",
            "",
            "// Do the math, work with collections",
            "// global using System.Numerics;",
            "// global using static System.Math;",
            "// global using static System.Convert;",
            "// global using System.Collections.Immutable;",
            "",
            "// Work with Text, Json and XML",
            "// global using System.Xml;",
            "// global using System.Text;",
            "// global using System.Text.RegularExpressions;",
            "// global using System.Text.Json;",
            "// global using System.Text.Json.Serialization;",
            "",
            "// debugging and logging",
            "// global using Xunit;",
            "// global using System.Diagnostics;",
            "// global using System.Diagnostics.CodeAnalysis;",
            "",
            "// Your current project",
            "global using [namespace];",
            "namespace [namespace]; // Delete if you created this namespace already"
        ]
    },
    "CSharpUnitTest": {
        "displayName": "C# Unit Test",
        "description": "Do unit testing using Xunit",
        "filename": "Fact",
        "fileExt": ".cs",
        "body": [
            "namespace [namespace];",
            "",
            "public class $TM_FILENAME_BASE",
            "{",
            "    [Fact]",
            "    public void Test1()",
            "    {",
            "        int a = 1;",
            "        int b = 2;",
            "        int expected = 3;",
            "        int actual = a + b;",
            "        // Testing...",
            "        Assert.Equal(expected, actual);",
            "    }",
            "}"
        ]
    },
    "TSClass": {
        "displayName": "TS Class",
        "description": "Typescript class with constructor",
        "filename": "Class",
        "fileExt": ".ts",
        "body": [
            "/**",
            "* Class description",
            "*/",
            "export class $TM_FILENAME_BASE {",
            "    constructor(${1:...args}:${2:string[]}) {",
            "        $0",
            "    }",
            "}"
        ]
    },
    "TSModule": {
        "displayName": "TS module",
        "description": "A Typescript module with function",
        "filename": "Module",
        "fileExt": ".ts",
        "body": [
            "/**",
            "* $TM_FILENAME_BASE description",
            "*/",
            "export function $TM_FILENAME_BASE() {",
            "\tconsole.log('${0}');",
            "}"
        ]
    },
    "Unity Script": {
        "displayName": "Unity Script",
        "description": "A standard Unity Script",
        "filename": "Script",
        "fileExt": ".cs",
        "body": [
            "using System.Collections;",
            "using System.Collections.Generic;",
            "using UnityEngine;",
            "",
            "public class $TM_FILENAME_BASE : MonoBehaviour",
            "{",
            "    // Start is called before the first frame update",
            "    void Start()",
            "    {",
            "        $0",
            "    }",
            "",
            "    // Update is called once per frame",
            "    void Update()",
            "    {",
            "        ",
            "    }",
            "}"
        ]
    },
    "UnityScriptableObject": {
        "displayName": "Unity ScriptableObject",
        "description": "A standard unity scriptableObject",
        "filename": "ScriptableObject",
        "fileExt": ".cs",
        "body": [
            "using UnityEngine;",
            "",
            "[CreateAssetMenu(fileName = \"$TM_FILENAME_BASE\", menuName = \"ScriptableObjects/$TM_FILENAME_BASE\", order = 1)]",
            "public class $TM_FILENAME_BASE : ScriptableObject",
            "{",
            "    private void OnEnable()",
            "    {",
            "        // Do stuff",
            "    }",
            "",
            "    private void OnDisable()",
            "    {",
            "        // Do stuff",
            "    }",
            "}"
        ]
    },
    "XMLFile": {
        "displayName": "XML file",
        "description": "A basic xml file",
        "filename": "myXml",
        "fileExt": ".xml",
        "body": [
            "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
            "<$TM_FILENAME_BASE>",
            "    $0",
            "</$TM_FILENAME_BASE>"
        ]
    },
    "JsonFile": {
        "displayName": "Json file",
        "description": "A empty json file",
        "filename": "myJson",
        "fileExt": ".json",
        "body": ["{", "    $0", "}"]
    }
}
